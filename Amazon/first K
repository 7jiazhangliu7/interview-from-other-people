import java.util.*;

public class Solution {
    public List<Integer> firstK(int[] input, int k) {
        List<Integer> result = new LinkedList<Integer>();
        if(input == null || input.length <= 1) return result;

        PriorityQueue<Integer> pq = new PriorityQueue<Integer>(input.length, new Comparator<Integer>(){
            public int compare(Integer i1, Integer i2){
                return -1*(i1.compareTo(i2));
            }
        });

        for(Integer i : input) {
            pq.add(i);
        }

        for(int i = 0; i < k; i++) {
            result.add(pq.remove());
        }

        return result;
    }

    public static void main(String args[]) {
        Solution s = new Solution();
        int[] input = {1,2,3,4,5,6,7,8,9};
        System.err.println(s.firstK(input, 5));
    }

    public static class TreeNode {
        int val;
        TreeNode left;
        TreeNode right;

        public TreeNode(int val) {
            this.val = val;
        }
    }
}
