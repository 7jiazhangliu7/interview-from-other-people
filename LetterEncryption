import java.util.HashMap;

/**
 * Created by jiazhangliu on 5/18/15.
 */
public class LetterEncryption {

    HashMap<Character, Integer> hm = new HashMap<Character, Integer>();

    public LetterEncryption() {
        hm.put('a', 1);hm.put('b', 2);hm.put('c', 3);
        hm.put('d', 4);hm.put('e', 5);hm.put('f', 6);
        hm.put('g', 7);hm.put('h', 8);hm.put('i', 9);
        hm.put('j', 10);hm.put('k', 11);hm.put('l', 12);
        hm.put('m', 13);hm.put('n', 14);hm.put('o', 15);
        hm.put('p', 16);hm.put('q', 17);hm.put('r', 18);
        hm.put('s', 19);hm.put('t', 20);hm.put('u', 21);
        hm.put('v', 22);hm.put('w', 23);hm.put('x', 24);
        hm.put('y', 25);hm.put('z', 26);
    }

    public String letterEncryption(String input, int N){
        if(input == null || input.length() == 0) return input;

        StringBuffer sb = new StringBuffer();

        for(int i = 0; i < input.length(); i++) {
            sb.append(encryption(input.charAt(i), N));
        }

        return sb.toString();
    }

    public char encryption(char input, int N){
        return (char)((getNum(input) * N) % 26 + 'a'-1);
    }

    public int getNum (char input) {
        return hm.get(input);
    }

    public static void main(String args[]) {
        LetterEncryption le = new LetterEncryption();

        System.err.println(le.letterEncryption("abcde", 4));
    }
}
