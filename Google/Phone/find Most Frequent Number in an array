import java.util.HashMap;
import java.util.Map;

/**
 * Created by Jiazhang_Liu on 6/19/2015.
 */
public class Solution {
    public int mostFrequentNumber(int[] input) {
        if(input == null || input.length == 0) {
            return Integer.MIN_VALUE;
        }

        Map<Integer, Integer> hm = new HashMap<Integer, Integer>();

        for(Integer i : input) {
            if(hm.containsKey(i)) {
                hm.put(i, hm.get(i) + 1);
            } else {
                hm.put(i, 1);
            }
        }

        int max = 0, num = Integer.MIN_VALUE;

        for(Integer i : hm.keySet()) {
            if(max < hm.get(i)) num = i;
            max = Math.max(max, hm.get(i));
        }

        return num;
    }

    public int mostFrequentNumberBetterSolution(int[] input) {
        if(input == null || input.length == 0) {
            return Integer.MIN_VALUE;
        }

        int m = Integer.MIN_VALUE;
        for(int i = 0; i < input.length; i++) {
            m = Math.max(m, input[i]);
        }

        for(int i = 0; i < input.length; i++) {
            input[input[i] % m] += m;
        }

        int max = Integer.MIN_VALUE, index = 0;
        for(int i = 0; i < input.length; i++) {
            if(max < input[i]) index = i;
            max = Math.max(max, input[i]);
        }

        return index;
    }

    public static void main(String args[]) {
        Solution s = new Solution();
        int[] input = {1,5,3,4,3,3,3,6,7,8,5,6,8,1,2,3,3,4,5};
        System.err.println(s.mostFrequentNumber(input));
        System.err.println(s.mostFrequentNumberBetterSolution(input));
    }
}
