import java.util.Comparator;
import java.util.LinkedList;
import java.util.List;
import java.util.PriorityQueue;

/**
 * Created by jiazhangliu on 5/18/15.
 */
public class ClosestKPoints {

    public List<Point> getK(Point[] input, int K) {
        List<Point> result = new LinkedList<Point>();
        if(input == null || input.length < K) return result;

        PriorityQueue<Point> pq = new PriorityQueue<Point>(input.length, new Comparator<Point>() {
            @Override
            public int compare(Point o1, Point o2) {
                double distance1 = Math.pow(o1.x,2) + Math.pow(o1.y,2);
                double distance2 = Math.pow(o2.x,2) + Math.pow(o2.y,2);
                if(distance1 > distance2) {
                    return 1;
                } else if (distance1 < distance2) {
                    return -1;
                } else {
                    return 0;
                }
            }
        });

        for(Point p : input) {
            pq.add(p);
        }

        result = getKClosest(pq, K);
        return result;
    }

    public List<Point> getKClosest(PriorityQueue<Point> pq, int K) {
        List<Point> result = new LinkedList<Point>();

        int index = 0;
        while(index < K) {
            result.add(pq.remove());
            index++;
        }

        return result;
    }

    private static class Point {
        int x;
        int y;
        int label;
        Point(int x, int y, int label) {
            this.x = x;
            this.y = y;
            this.label = label;
        }
    }

    public static void main(String args[]) {
        ClosestKPoints ckp = new ClosestKPoints();

        Point p1 = new Point(1,2,1);Point p2 = new Point(2,1,2);
        Point p3 = new Point(5,2,3);Point p4 = new Point(7,1,4);
        Point p5 = new Point(3,2,5);Point p6 = new Point(6,3,6);
        Point p7 = new Point(7,7,7);Point p8 = new Point(1,1,8);
        Point p9 = new Point(0,2,9);Point p10 = new Point(1,0,10);
        Point p11 = new Point(11,2,11);Point p12 = new Point(12,2,12);
        Point p13 = new Point(1,21,13);Point p14 = new Point(14,2,14);
        Point p15 = new Point(1,22,15);Point p16 = new Point(1,12,16);
        Point p17 = new Point(11,2,17);Point p18 = new Point(2,9,18);
        Point p19 = new Point(7,2,19);Point p20 = new Point(4,6,20);


        Point[] input = {p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20};


        List<Point> result = ckp.getK(input,10);

        for(Point p : result) {
            System.err.println(p.label);
        }
    }
}
